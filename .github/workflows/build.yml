# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build

on:
  push:
    branches:
      - '**'
      - 'releases/**-alpha'
      - '!releases/**'      # release
    tags-ignore: [ 'v**' ]  # release
  pull_request:
    branches: [ 'master' ]
  workflow_call:  # 使能被其他 workflow 调用
  schedule:
    - cron: '0 0 * * *'  # 北京时间上午 08:00

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # python -m pip install flake8 pytest pytest-cov
        pip install -r requirements-dev.txt
        pip install -r requirements.txt

    - name: Setup sdist
      run: python setup.py sdist  # need dist for release
      #run: python setup.py install

    - name: Setup package
      if: matrix.os != 'windows-latest'
      run: pip install dist/*.tar.gz  # not support windows

    - name: Setup package on Windows
      if: matrix.os == 'windows-latest'
      run: pip install (Get-ChildItem dist/*.tar.gz)

    - name: Lint by flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./src ./tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./src ./tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Pytest & Generate coverage report
      run: pytest --cov=huaytools --cov-report=xml:./coverage.xml

    - name: Run Mypy
      run: mypy --install-types --non-interactive src/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: pytest_${{ matrix.os }}_${{ matrix.python-version }}
        directory: ./coverage/reports/
        files: ./coverage.xml
        fail_ci_if_error: false  # fix error "Too many uploads to this commit."
        verbose: true
